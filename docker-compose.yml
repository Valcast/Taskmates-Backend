services:
  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "8080:8080"
    expose:
      - "8080"
    depends_on:
      - backend-db
      - kafka
    environment:
      SPRING_DATASOURCE_USERNAME: ${BACKEND_DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${BACKEND_DATABASE_PASSWORD}

  authorization_server:
    build:
      context: ./authorization_server
    container_name: authorization-server
    ports:
      - "8081:8080"
    expose:
      - "8081"
    depends_on:
      - auth-db
    environment:
      SPRING_DATASOURCE_USERNAME: ${AUTH_DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_DATABASE_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}

  notification_service:
    build:
      context: ./notification_service
    container_name: notification-service
    ports:
      - "8082:8080"
    expose:
      - "8082"
    depends_on:
      - notification-db
      - kafka
    environment:
      SPRING_DATASOURCE_USERNAME: ${NOTIFICATION_DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${NOTIFICATION_DATABASE_PASSWORD}

  backend-db:
    image: postgres:15
    container_name: backend-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: backend_db
      POSTGRES_USER: ${BACKEND_DATABASE_USER}
      POSTGRES_PASSWORD: ${BACKEND_DATABASE_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/migrations/backend_db:/docker-entrypoint-initdb.d

  auth-db:
    image: postgres:15
    container_name: auth-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: ${AUTH_DATABASE_USER}
      POSTGRES_PASSWORD: ${AUTH_DATABASE_PASSWORD}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
      - ./db/migrations/auth_db:/docker-entrypoint-initdb.d


  notification-db:
    image: postgres:15
    container_name: notification-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: ${NOTIFICATION_DATABASE_USER}
      POSTGRES_PASSWORD: ${NOTIFICATION_DATABASE_PASSWORD}
    volumes:
      - notification_db_data:/var/lib/postgresql/data
      - ./db/migrations/notification_db:/docker-entrypoint-initdb.d

  notification-cache:
    image: redis:latest
    container_name: notification-cache
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    volumes:
      - notification_cache_data:/data
    restart: unless-stopped
  
  
  kafka:
    image: apache/kafka:3.9.0
    restart: no
    container_name: kafka
    ports:
      - "9092:9092"

volumes:
  db_data:
  auth_db_data:
  notification_db_data:
  notification_cache_data: