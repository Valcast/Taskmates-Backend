services:
  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "8080:8080"
    expose:
      - "8080"
    depends_on:
      - backend-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://backend-db:5432/${BACKEND_DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${BACKEND_DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${BACKEND_DATABASE_PASSWORD}

  authorization_server:
    build:
      context: ./authorization_server
    container_name: authorization-server
    ports:
      - "8081:8080"
    expose:
      - "8081"
    depends_on:
      - auth-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/${AUTH_DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${AUTH_DATABASE_USER}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_DATABASE_PASSWORD}

  backend-db:
    image: postgres:15
    container_name: backend-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${BACKEND_DATABASE_NAME}
      POSTGRES_USER: ${BACKEND_DATABASE_USER}
      POSTGRES_PASSWORD: ${BACKEND_DATABASE_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/migrations/backend_db:/docker-entrypoint-initdb.d

  auth-db:
    image: postgres:15
    container_name: auth-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${AUTH_DATABASE_NAME}
      POSTGRES_USER: ${AUTH_DATABASE_USER}
      POSTGRES_PASSWORD: ${AUTH_DATABASE_PASSWORD}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
      - ./db/migrations/auth_db:/docker-entrypoint-initdb.d


volumes:
  db_data:
  auth_db_data: